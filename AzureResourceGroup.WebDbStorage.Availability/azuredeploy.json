{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",

  ///////////////////////////////////////////////
  // PARAMETERS
  ///////////////////////////////////////////////
  "parameters": {

    /* DEPLOYMENT PARAM */
    "deploymentId": {
      "type": "string",
      "defaultValue": "[uniqueString(subscription().id, resourceGroup().id)]",
      "metadata": {
        "description": "Unique string for grouping system environment."
      }
    },
    "environmentTagName": {
      "type": "string",
      "defaultValue": "NONE",
      "metadata": {
        "description": "Tag value for 'ENVIRONMENT'."
      }
    },
    "prefix": {
      "type": "string",
      "defaultValue": "wds",
      "metadata": {
        "description": "Enviroment prefix name."
      }
    },

    /* WEB APPS PARAM */
    "enableMetricAlert": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable alert metric setting in WebApps"
      }
    }

  },

  ///////////////////////////////////////////////
  // VARIABLES
  ///////////////////////////////////////////////
  "variables": {
    "appServicePlanName": "[concat(parameters('prefix'), '-app-', parameters('deploymentId'))]",
    "webSiteName": "[concat(parameters('prefix'), '-web-', parameters('deploymentId'))]",
    "insightsName": "[concat(variables('webSiteName'), '-insights')]",
    "aliveCheckName": "[concat(variables('webSiteName'), '-alivecheck')]",
    "certificateName": "[concat(variables('webSiteName'),'-cert')]"
  },

  ///////////////////////////////////////////////
  // RESOURCES
  ///////////////////////////////////////////////
  "resources": [

    /* AlertRules (LiveMonitor) */
    {
      "apiVersion": "2015-05-01",
      "name": "[variables('insightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "East US",
      "dependsOn": [
      ],
      "tags": {
        "ENVIRONMENT": "[parameters('environmentTagName')]",
        "RESOURCE_GROUP": "[parameters('deploymentId')]",
        "RESOURCE_TYPE": "ApplicationInsights-Availability",
        "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('webSiteName')))]": "Resource",
        "displayName": "AppInsightsComponent"
      },
      "properties": {
        "ApplicationId": "[variables('webSiteName')]"
      }
    },
    {
      //
      // Availability test: part 1 configures the test
      //
      "apiVersion": "2014-04-01",
      "name": "[variables('aliveCheckName')]",
      "type": "Microsoft.Insights/webtests",
      "location": "East US",
      "dependsOn": [
      ],
      "tags": {
        "ENVIRONMENT": "[parameters('environmentTagName')]",
        "RESOURCE_GROUP": "[parameters('deploymentId')]",
        "RESOURCE_TYPE": "ApplicationInsights-Availability",
        "[concat('hidden-link:', resourceId('Microsoft.Insights/components', variables('insightsName')))]": "Resource"
      },
      "properties": {
        "Name": "[variables('aliveCheckName')]",
        "Enabled": "[parameters('enableMetricAlert')]",
        "Frequency": 900, // 15 minutes
        "Timeout": 120, // 2 minutes
        "Kind": "ping", // single URL test
        "RetryEnabled": true,
        "Locations": [
          {
            "Id": "us-il-ch1-azr"
          },
          {
            "Id": "apac-jp-kaw-edge"
          },
          {
            "Id": "emea-fr-pra-edge"
          }
        ],
        "Configuration": {
          "WebTest": "[concat('<WebTest Name=\"', variables('aliveCheckName'), '\" Enabled=\"True\" CssProjectStructure=\"\" CssIteration=\"\" Timeout=\"120\" WorkItemIds=\"\" xmlns=\"http://microsoft.com/schemas/VisualStudio/TeamTest/2010\" Description=\"\" CredentialUserName=\"\" CredentialPassword=\"\" PreAuthenticate=\"True\" Proxy=\"default\" StopOnError=\"False\" RecordedResultFile=\"\" ResultsLocale=\"\"> <Items> <Request Method=\"GET\" Version=\"1.1\" Url=\"', concat('https://', variables('webSiteName'), '.azurewebsites.net'), '\" ThinkTime=\"0\" Timeout=\"120\" ParseDependentRequests=\"True\" FollowRedirects=\"True\" RecordResult=\"True\" Cache=\"False\" ResponseTimeGoal=\"0\" Encoding=\"utf-8\" ExpectedHttpStatusCode=\"200\" ExpectedResponseUrl=\"\" ReportingName=\"\" IgnoreHttpStatusCode=\"False\"/> </Items> </WebTest>')]"
        },
        "SyntheticMonitorId": "[variables('aliveCheckName')]"
      }
    },
    {
      //
      //Availability test: part 2, the alert rule
      //
      "apiVersion": "2014-04-01",
      "name": "[concat('AliveAlert-', variables('appServicePlanName'))]",
      "type": "Microsoft.Insights/alertrules",
      "location": "East US",
      "dependsOn": [
        "[variables('aliveCheckName')]"
      ],
      "tags": {
        "ENVIRONMENT": "[parameters('environmentTagName')]",
        "RESOURCE_GROUP": "[parameters('deploymentId')]",
        "RESOURCE_TYPE": "ApplicationInsights-Availability",
        "[concat('hidden-link:', resourceId('Microsoft.Insights/components', variables('insightsName')))]": "Resource",
        "[concat('hidden-link:', resourceId('Microsoft.Insights/webtests', variables('aliveCheckName')))]": "Resource"
      },
      "properties": {
        "name": "[concat('AliveAlert-', variables('appServicePlanName'))]",
        "isEnabled": "[parameters('enableMetricAlert')]",
        "condition": {
          "$type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.LocationThresholdRuleCondition, Microsoft.WindowsAzure.Management.Mon.Client",
          "odata.type": "Microsoft.Azure.Management.Insights.Models.LocationThresholdRuleCondition",
          "dataSource": {
            "$type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource, Microsoft.WindowsAzure.Management.Mon.Client",
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
            "resourceUri": "[resourceId('microsoft.insights/webtests', variables('aliveCheckName'))]",
            "metricName": "GSMT_AvRaW"
          },
          "windowSize": "PT15M", // Take action if changed state for 15 minutes
          "failedLocationCount": 2
        },
        "actions": [
          {
            "$type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction, Microsoft.WindowsAzure.Management.Mon.Client",
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
            "sendToServiceOwners": false,
            "customEmails": []
          }
        ]
      }
    }

  ],

  ///////////////////////////////////////////////
  // RESOURCES
  ///////////////////////////////////////////////
  "outputs": {}
}
